/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.17
 * Generated at: 2019-05-28 16:41:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WebProject.bbs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import bbs.*;
import file.*;
import comment.*;
import java.util.ArrayList;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("bbs");
    _jspx_imports_packages.add("file");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("comment");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\", initial-scale=\"1\"> <!-- 핸드폰에서 접속할 때 화면이 잘 나오도록 함.  -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../css/style.css\" />\r\n");
      out.write("<title>JSP 게시판 웹 사이트</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String userID = null;
		if (session.getAttribute("userID") != null) {
			userID = (String) session.getAttribute("userID");
		}
		int bbsID = 0;
		if (request.getParameter("bbsID") != null) {
			bbsID = Integer.parseInt(request.getParameter("bbsID"));
		}
		if (bbsID == 0) {
			PrintWriter script = response.getWriter();
			script.println("<script>");
			script.println("alert('유효하지 않은 글입니다.')");
			script.println("location.href = 'bbs.jsp'");
			script.println("</script>");
		}
		Bbs bbs = new BbsDAO().getBbs(bbsID);
	
      out.write("\r\n");
      out.write("\t<div class=\"login\">\r\n");
      out.write("\t  \t");

  		String sessionID = null;
  		if (session.getAttribute("userID") != null) {
  			sessionID = session.getAttribute("userID").toString();
  		}
  		
  		if (sessionID != null) {
	  	
      out.write("\r\n");
      out.write("  \t\t\t");
 if (sessionID.equals("admin")) {
      out.write("\r\n");
      out.write("  \t\t\t\t\t관리자 모드&nbsp;&nbsp;\r\n");
      out.write("  \t\t\t\t\t<a href=\"../user/logout.jsp\">Logout</a>\r\n");
      out.write("  \t\t\t");
 } else { 
      out.write("\r\n");
      out.write("  \t\t\t\t\t");
      out.print( sessionID );
      out.write("님 반갑습니다!&nbsp;&nbsp;\r\n");
      out.write("\t\t  \t\t\t<a href=\"../user/logout.jsp\">Logout</a>&nbsp;\r\n");
      out.write("\t\t  \t\t\t<a href=\"../user/login.jsp\">MyPage</a>\r\n");
      out.write("  \t\t\t");
 } 
      out.write("\r\n");
      out.write("\t  \t");

	  		} else {
	  	
      out.write("\r\n");
      out.write("\t\t  \t<a href=\"../user/login.jsp\">Login</a>&nbsp;\r\n");
      out.write("\t\t \t<a href=\"../user/join.jsp\">회원가입</a>\r\n");
      out.write("\t\t ");

	  		}
		 
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("  \r\n");
      out.write("  <div class=\"serch\">\r\n");
      out.write(" \t<input type=\"text\" placeholder=\"검색어 입력\">\r\n");
      out.write("  \t<button>검색</button>\r\n");
      out.write("  </div> \r\n");
      out.write("  \r\n");
      out.write("  <h1 class=\"title\"><a href=\"../user/index.jsp\">Game Castle</a></h1>\r\n");
      out.write("  \r\n");
      out.write("  <ul> \r\n");
      out.write("  \t<li class=\"list\"><a href=\"../user/index.jsp\">메인\t</a></li>\r\n");
      out.write("  \t<li class=\"list\">리스트</li>\r\n");
      out.write("  \t<li class=\"list\"><a href=\"../bbs/bbs.jsp\">게시판</a></li>\r\n");
      out.write("  </ul>\r\n");
      out.write("  <hr>\r\n");
      out.write(" <div id=\"grid\">    \t\t\r\n");
      out.write("  \r\n");
      out.write("    <ul class=\"genre\">\r\n");
      out.write("    \t<li><a href=\"action.jsp\">액션</a></li>\r\n");
      out.write("    \t<br>\r\n");
      out.write("    \t<li>어드벤쳐</li>\r\n");
      out.write("    \t<br>\r\n");
      out.write("    \t<li>레이싱</li>\r\n");
      out.write("    \t<br>\r\n");
      out.write("    \t<li>스포츠</li>\r\n");
      out.write("    \t<br>\r\n");
      out.write("    \t<li>슈팅/FPS</li>\r\n");
      out.write("    \t<br>\r\n");
      out.write("    \t<li>퍼즐</li>\r\n");
      out.write("    \t<br>\r\n");
      out.write("    \t<li>시뮬래이션</li>\r\n");
      out.write("    \t<br>\r\n");
      out.write("    \t<li>기타</li>\r\n");
      out.write("    </ul>\r\n");
      out.write("\t<div class=\"White space\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<table class=\"table table-striped\" style=\"text-align: center; border: 1px solid #dddddd\">\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th colspan=\"3\" style=\"background-color: #eeeeee; text-align: center;\">게시판 글 보기</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td style=\"width: 20%;\">글 제목</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"2\">");
      out.print( bbs.getBbsTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>작성자</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"2\">");
      out.print( bbs.getUserID() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>작성일자</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"2\">");
      out.print( bbs.getBbsDate().substring(0, 11) + bbs.getBbsDate().substring(11, 13) + "시" + bbs.getBbsDate().substring(14, 16) + "분 "  );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>내용</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"2\" style=\"min-height: 200px; text-align: left;\">");
      out.print( bbs.getBbsContent().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");
  //파일이 있으면 파일을 출력하는 부분.
							FilesDAO filesDAO = new FilesDAO();
							if (filesDAO.isFile(bbsID) == true) {  //보려는 게시물에 파일이 존재하는지 검사.
								/* Files files = new FilesDAO().getFileName(bbsID);
								String fileName = files.getFileName(); */
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>파일 다운</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t");

								/* out.clear();  // getOutputStream() has already been called 오류 제거하기 위함.
								out = pageContext.pushBody(); // 위와 동일
								response.setContentType("image/jpeg");
								OutputStream output = response.getOutputStream();
								InputStream input = null;
								input = filesDAO.getFile(bbsID);
								
								int len=-1;
								byte byteRead[] = new byte[1024];
								while((len = input.read(byteRead)) != -1) { 
									output.write(byteRead,0,len); 
								}
								    
								int byteRead;
								while((byteRead = input.read()) != -1) {
								   	output.write(byteRead);
								} */
							
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

									String directory = application.getRealPath("/upload/");
									String files[] = new File(directory).list();
									for (String file : files) {
										if (filesDAO.isFileSamebbsID(file, bbsID)) {  //파일 이름과 bbsID가 동일하다면
											out.write("<a href=\"" + request.getContextPath() + "/downloadAction?file=" +  //파일 다운로드 가능.
												java.net.URLEncoder.encode(file, "UTF-8") + "\">" + file + "</a><br>");
											int fileLength = file.length();
											if (file.substring(fileLength-4).equals(".jpg")) {  //jpg(그림)파일인 경우 화면에 출력. 현재 웹 페이지에서 동작 안됨.
												String fullpath = directory + file;
												//System.out.println(fullpath);
												
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"");
      out.print(fullpath );
      out.write("\" width=512 height=384></img>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
 }
										}
									}
							}
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t<a href=\"bbs.jsp\" class=\"btn btn-primary\">목록</a>\r\n");
      out.write("\t\t\t\t");

					if (userID != null && userID.equals(bbs.getUserID())) {
				
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"update.jsp?bbsID=");
      out.print( bbsID );
      out.write("\" class=\"btn btn-primary\">수정</a>\r\n");
      out.write("\t\t\t\t\t<a onclick=\"return confirm('정말로 삭제하시겠습니까?')\" href=\"deleteAction.jsp?bbsID=");
      out.print( bbsID );
      out.write("\" class=\"btn btn-primary\">삭제</a>\r\n");
      out.write("\t\t\t\t\t<br><br>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t\t");

					//기존 댓글들 나오는 부분~~~~
					CommentDAO commentDAO = new CommentDAO();
					ArrayList<Comment> commentList = commentDAO.getAllComment(bbsID);
					
					for (int i=0; i<commentList.size(); i++) { 
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>ID : ");
      out.print( commentList.get(i).getUserID() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>날짜 : ");
      out.print( commentList.get(i).getCommentDate().substring(0, 11) + commentList.get(i).getCommentDate().substring(11, 13) + "시" + commentList.get(i).getCommentDate().substring(14, 16) + "분 " );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>내용 : ");
      out.print( commentList.get(i).getCommentContent() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"updateComment.jsp?bbsID=");
      out.print( bbsID );
      out.write("&commentNumber=");
      out.print( commentList.get(i).getCommentNumber() );
      out.write("\">수정</a>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<a onclick=\"return confirm('정말로 삭제하시겠습니까?')\" href=\"deleteComment.jsp?bbsID=");
      out.print( bbsID );
      out.write("\" class=\"btn btn-primary\">삭제</a><br><br>\r\n");
      out.write("\t\t\t\t");
		
					}
				
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- 새롭게 댓글 다는 부분. -->\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<form action=\"commentWrite.jsp?bbsID=");
      out.print( bbsID );
      out.write("\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t댓글 : <input type=\"text\" name=\"comment\">\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"작성\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("  </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
